// models/place.dart
/// –ö–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç–∞/–¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
class Place {
  // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–µ—Å—Ç–∞
  final int id;

  // –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –º–µ—Å—Ç–æ
  final String cityName;

  // –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞/–¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  final String name;

  // –ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–µ (–≤–æ–∑–º–æ–∂–Ω–æ, –≤ —Ñ–æ—Ä–º–∞—Ç–µ WKT –∏–ª–∏ GeoJSON)
  final String geom;

  // –û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞
  final String desc;

  // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –º–µ—Å—Ç–∞ (–≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö –∏–ª–∏ –º–∏–ª—è—Ö)
  final double distance;

  // –°–ø–∏—Å–æ–∫ URL-–∞–¥—Ä–µ—Å–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –º–µ—Å—Ç–∞
  final List<String> photos;

  // –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —à–∏—Ä–æ—Ç–∞
  final double lat;

  // –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –¥–æ–ª–≥–æ—Ç–∞
  final double lng;

  // –¢–∏–ø –º–µ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "—Ä–µ—Å—Ç–æ—Ä–∞–Ω", "–º—É–∑–µ–π", "–ø–∞—Ä–∫" –∏ —Ç.–¥.)
  final String type;

  // –¶–µ–Ω–∞ –∑–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ (–º–æ–∂–µ—Ç –±—ã—Ç—å null –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –º–µ—Å—Ç)
  final double? price;

  // –í–∞–ª—é—Ç–∞ –¥–ª—è —Ü–µ–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, "RUB", "USD", "EUR")
  final String currency;

  bool isFavorite;

  /// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ Place
  /// –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã, –∫—Ä–æ–º–µ price (–º–æ–∂–µ—Ç –±—ã—Ç—å null)
  Place({
    required this.id,
    required this.cityName,
    required this.name,
    required this.geom,
    required this.desc,
    required this.distance,
    required this.photos,
    required this.lat,
    required this.lng,
    required this.type,
    required this.price,
    required this.currency,
    required this.isFavorite,
  });

  // // üì¶ –ú–æ–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∞
  // static List<Place> testPlaces = [
  //   Place(
  //     id: 1,
  //     cityName: '–ê—Å—Ç–∞–Ω–∞',
  //     name: '–ö–∞—Ñ–µ "–£—é—Ç–Ω–æ–µ"',
  //     geom: '',
  //     desc: '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∑–∞–≤—Ç—Ä–∞–∫–∞',
  //     distance: 2.5,
  //     photos: [
  //       'https://img1.akspic.ru/previews/1/6/0/6/7/176061/176061-yablochnyj_pejzazh-yabloko-illustracia-prirodnyj_landshaft-purpur-500x.jpg'
  //     ],
  //     lat: 51.128207,
  //     lng: 71.430411,
  //     type: '–∫–∞—Ñ–µ',
  //     price: 1500,
  //     currency: 'KZT',
  //     isFavorite: false
  //   ),
  //   Place(
  //     id: 2,
  //     cityName: '–ê—Å—Ç–∞–Ω–∞',
  //     name: '–ü–∞—Ä–∫ "–ó–µ–ª—ë–Ω—ã–π"',
  //     geom: '',
  //     desc: '–û—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫',
  //     distance: 1.2,
  //     photos: [
  //       'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSGL9RC7RwT5OBzNhN86NZ3aoOrf17qcI8j5w&s'
  //     ],
  //     lat: 51.129207,
  //     lng: 71.431411,
  //     type: '–ø–∞—Ä–∫',
  //     price: 0,
  //     currency: 'KZT',
  //     isFavorite: true
  //   ),
  //   Place(
  //     id: 3,
  //     cityName: '–ê—Å—Ç–∞–Ω–∞',
  //     name: '–ú—É–∑–µ–π –∏—Å—Ç–æ—Ä–∏–∏',
  //     geom: '',
  //     desc: '–ü–æ–≥—Ä—É–∂–∞–µ–º—Å—è –≤ –ø—Ä–æ—à–ª–æ–µ',
  //     distance: 3.1,
  //     photos: ['https://example.com/museum.jpg'],
  //     lat: 51.130207,
  //     lng: 71.432411,
  //     type: '–º—É–∑–µ–π',
  //     price: 1000,
  //     currency: 'KZT',
  //     isFavorite: false
  //   ),
  //   Place(
  //     id: 4,
  //     cityName: '–ê—Å—Ç–∞–Ω–∞',
  //     name: '–†–µ—Å—Ç–æ—Ä–∞–Ω "–®–∞—à–ª—ã—á–æ–∫"',
  //     geom: '',
  //     desc: '–í–∫—É—Å–Ω–µ–π—à–∏–µ –±–ª—é–¥–∞ –Ω–∞ —É–≥–ª—è—Ö',
  //     distance: 0.8,
  //     photos: ['https://example.com/restaurant.jpg'],
  //     lat: 51.131207,
  //     lng: 71.433411,
  //     type: '—Ä–µ—Å—Ç–æ—Ä–∞–Ω',
  //     price: 3000,
  //     currency: 'KZT',
  //     isFavorite: false
  //   ),
  //   Place(
  //     id: 5,
  //     cityName: '–ê—Å—Ç–∞–Ω–∞',
  //     name: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∫',
  //     geom: '',
  //     desc: '–ü—Ä–æ—Å—Ç–æ—Ä –∏ –ø—Ä–∏—Ä–æ–¥–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞',
  //     distance: 2.0,
  //     photos: ['https://example.com/central_park.jpg'],
  //     lat: 51.132207,
  //     lng: 71.434411,
  //     type: '–ø–∞—Ä–∫',
  //     price: 0,
  //     currency: 'KZT',
  //     isFavorite: false
  //   ),
  // ];

  /// –§–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ Place –∏–∑ JSON
  /// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ API
  factory Place.fromJson(Map<String, dynamic> json) {

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –∏–∑ JSON
    final coords = json['coordinates'] ?? {};

    // –ó–∞ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    // print('[DEBUG] Raw coordinates: $coords');
    // print('[DEBUG] coords[lat]: ${coords['lat']} (type: ${coords['lat'].runtimeType})');
    // print('[DEBUG] coords[lng]: ${coords['lng']} (type: ${coords['lng'].runtimeType})');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    double latitude = 0.0;
    double longitude = 0.0;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ JSON –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏—Ö –∏–∑–≤–ª–µ–∫–∞–µ–º
    if (coords['lat'] != null && coords['lng'] != null) {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ª—é–±–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ double
      latitude = (coords['lat'] as num).toDouble();
      longitude = (coords['lng'] as num).toDouble();
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    List<String> photosList = [];
    if (json['photos'] != null) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ photos –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —è–≤–ª—è–µ—Ç—Å—è —Å–ø–∏—Å–∫–æ–º
      if (json['photos'] is List) {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫
        photosList = List<String>.from(json['photos']);
      }
    }

    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Place —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ JSON
    final place = Place(
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –ø–æ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ JSON
      id: json['id'] ?? 0,
      cityName: json['cityName'] ?? '',
      name: json['name'] ?? '',
      geom: json['geom'] ?? '',
      desc: json['desc'] ?? '',
      // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º distance –≤ double
      distance: (json['distance'] as num?)?.toDouble() ?? 0.0,
      photos: photosList,
      lat: latitude,
      lng: longitude,
      type: json['type'] ?? '',
      // –ï—Å–ª–∏ price —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ double, –∏–Ω–∞—á–µ –æ—Å—Ç–∞–≤–ª—è–µ–º null
      price: json['price'] != null ? (json['price'] as num).toDouble() : null,
      currency: json['currency'] ?? '',
      isFavorite: json['isFavorite'] ?? false,
    );

    // –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    print('[DEBUG] –°–æ–∑–¥–∞–Ω–æ –º–µ—Å—Ç–æ: ${place.name} —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ (${place.lat}, ${place.lng})');

    return place;
  }

}
